"class StronglyConnectedComponent {",
"public:",
"\tint V;          // 頂点数",
"\tint SubGraph;   // 強連結成分の数",
"\tvvi Graph;      // グラフの隣接リスト表現",
"\tvvi revGraph;   // 辺の向きを逆にしたグラフ",
"\tvvi SmallGraph; // 強連結成分分解によって縮めたグラフ",
"\tvi dfsline;     // 帰りがけ順の並び",
"\tvi compo;       // cmp[i]で頂点iの属するグループ",
"\tvb used;        // すでに調べたか",
"",
"\tStronglyConnectedComponent(int v) {",
"\t\tV = v;",
"\t\tGraph = vvi(v);",
"\t\trevGraph = vvi(v);",
"\t\tused = vb(v);",
"\t\tcompo = vi(v);",
"\t}",
"",
"\tint operator[](int k) {",
"\t\t// scc[i]でi番目の頂点のグループ番号を返す",
"\t\treturn compo[k];",
"\t}",
"",
"\tvoid add_edge(int from, int to) {",
"\t\tGraph[from].push_back(to);",
"\t\trevGraph[to].push_back(from);",
"\t}",
"",
"\tvoid dfs(int v) {",
"\t\tused[v] = true;",
"\t\tfor(int i = 0; i < Graph[v].size(); i++) {",
"\t\t\tif(!used[Graph[v][i]]) dfs(Graph[v][i]);",
"\t\t}",
"\t\tdfsline.push_back(v);",
"\t}",
"",
"\tvoid revdfs(int v, int k) {",
"\t\tused[v] = true;",
"\t\tcompo[v] = k;",
"\t\tfor(int i = 0; i < revGraph[v].size(); i++) {",
"\t\t\tif(!used[revGraph[v][i]]) revdfs(revGraph[v][i], k);",
"\t\t}",
"\t}",
"",
"\tint scc() {",
"\t\tused = vb((int)used.size(), false);",
"\t\tdfsline.clear();",
"\t\tfor(int v = 0; v < V; v++) {",
"\t\t\tif(!used[v]) dfs(v);",
"\t\t}",
"\t\tused = vb(used.size(), false);",
"\t\tSubGraph = 0;",
"\t\tfor(int i = dfsline.size() - 1; i >= 0; i--) {",
"\t\t\tif(!used[dfsline[i]]) revdfs(dfsline[i], SubGraph++);",
"\t\t}",
"\t\tfor(int i = 0; i < compo.size(); i++) {",
"\t\t\tcompo[i] = SubGraph - compo[i] - 1;",
"\t\t}",
"\t\treturn SubGraph;",
"\t}",
"",
"\tvoid build() {",
"\t\t// 縮めたグラフを構築する",
"\t\tSmallGraph = vvi(SubGraph);",
"\t\tfor (int i = 0; i < Graph.size(); i++) {",
"\t\t\tfor(int j = 0; j < Graph[i].size(); j++) {",
"\t\t\t\tint to = Graph[i][j];",
"\t\t\t\tint s = compo[i], t = compo[to];",
"\t\t\t\tif (s != t){",
"\t\t\t\t\tSmallGraph[s].push_back(t);",
"\t\t\t\t}",
"\t\t\t}",
"\t\t}",
"\t\tfor(int i = 0; i < SmallGraph.size(); i++) {",
"\t\t\t// 被った辺を削除",
"\t\t\tSmallGraph[i].erase(unique(SmallGraph[i].begin(), SmallGraph[i].end()), SmallGraph[i].end());",
"\t\t}",
"\t}",
"",
"\tvoid show_set_to_edge() {",
"\t\tfor(int i = 0; i < SmallGraph.size(); i++) {",
"\t\t\tcout << \"集合\" << i << \"から出ている辺 : \";",
"\t\t\tfor(int j = 0; j < SmallGraph[i].size(); j++) {",
"\t\t\t\tcout << SmallGraph[i][j] << ' ';",
"\t\t\t}",
"\t\t\tcout << endl;",
"\t\t}",
"\t\tcout << endl;",
"\t}",
"",
"\tvoid show_group_of_node() {",
"\t\tfor(int i = 0; i < V; i++) {",
"\t\t\tcout << \"頂点\" << i << \"の属するグループ : \" << compo[i] << endl;",
"\t\t}",
"\t\tcout << endl;",
"\t}",
"",
"\tvoid show_node_in_group() {",
"\t\tvvi group(SubGraph);",
"\t\tfor(int i = 0; i < compo.size(); i++) {",
"\t\t\tgroup[compo[i]].push_back(i);",
"\t\t}",
"\t\tfor(int i = 0; i < SmallGraph.size(); i++) {",
"\t\t\tcout << \"グループ\" << i << \"に属する頂点 : \";",
"\t\t\tfor(int j = 0; j < group[i].size(); j++) {",
"\t\t\t\tcout << group[i][j] << ' ';",
"\t\t\t}",
"\t\t\tcout << endl;",
"\t\t}",
"\t\tcout << endl;",
"\t}",
"}",
